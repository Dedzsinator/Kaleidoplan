version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: frontend.dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - kaleidoplan-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  backend:
    build:
      context: .
      dockerfile: backend.dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - FIREBASE_API_KEY=${FIREBASE_API_KEY}
      - FIREBASE_AUTH_DOMAIN=${FIREBASE_AUTH_DOMAIN}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}
      - FIREBASE_MESSAGING_SENDER_ID=${FIREBASE_MESSAGING_SENDER_ID}
      - FIREBASE_APP_ID=${FIREBASE_APP_ID}
      - FIREBASE_MEASUREMENT_ID=${FIREBASE_MEASUREMENT_ID}
      - MONGODB_URI=mongodb://mongo:27017/kaleidoplan
      - MONGODB_DB_NAME=kaleidoplan
    restart: unless-stopped
    volumes:
      - uploads:/app/uploads
    networks:
      - kaleidoplan-network
    depends_on:
      - mongo
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.15'
          memory: 256M

  mongo:
    image: mongo:5.0-focal
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    ports:
      - "27017:27017"
    command: mongod --wiredTigerCacheSizeGB 0.25
    networks:
      - kaleidoplan-network
    restart: unless-stopped
    environment:
      # Add authentication in production
      # MONGO_INITDB_ROOT_USERNAME: admin
      # MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 384M
        reservations:
          memory: 128M

volumes:
  uploads:
  mongo-data:
  mongo-config:

networks:
  kaleidoplan-network:
    driver: bridge
