name: KaleidoPlan CI/CD

on:
  push:
    branches: [main, develop, feature/*, release/*]
  pull_request:
    branches: [main, develop]

jobs:
  detect-platform:
    runs-on: ubuntu-latest
    outputs:
      platform: ${{ steps.detect.outputs.platform }}
    steps:
      - name: Detect platform
        id: detect
        run: |
          if [[ "$GITHUB_SERVER_URL" == "https://github.com" ]]; then
            echo "platform=github" >> $GITHUB_OUTPUT
          else
            echo "platform=gitlab" >> $GITHUB_OUTPUT
          fi
          echo "Running on platform: $(cat $GITHUB_OUTPUT | grep platform | cut -d '=' -f2)"

  format:
    runs-on: ubuntu-latest
    needs: detect-platform
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run Prettier
        run: npx prettier --write "**/*.{js,jsx,ts,tsx,json,md,css,html}"

      - name: Commit formatting changes
        if: github.event_name == 'push'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git diff --quiet && git diff --staged --quiet || git commit -m "style: auto-format code with Prettier"
          git push

  validate:
    runs-on: ubuntu-latest
    needs: format
    steps:
      - uses: actions/checkout@v3
        if: github.event_name == 'pull_request'

      - uses: actions/checkout@v3
        if: github.event_name == 'push'
        with:
          ref: ${{ github.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: ESLint validation
        run: npx eslint . --ext .js,.jsx,.ts,.tsx --fix

      - name: HTML validation with auto-fix
        run: |
          npm install -g html-validate
          html-validate --fix "**/*.html"

      - name: TypeScript type checking
        run: npx tsc --noEmit

      - name: Commit validation fixes
        if: github.event_name == 'push'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git diff --quiet && git diff --staged --quiet || git commit -m "fix: auto-fix validation issues"
          git push

  test:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - uses: actions/checkout@v3
        if: github.event_name == 'pull_request'

      - uses: actions/checkout@v3
        if: github.event_name == 'push'
        with:
          ref: ${{ github.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --ci --coverage

  version-and-changelog:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          npm install -g standard-version conventional-changelog-cli

      - name: Determine version bump
        id: bump
        run: |
          CURRENT_BRANCH=${GITHUB_REF#refs/heads/}
          if [[ "$CURRENT_BRANCH" == "main" ]]; then
            echo "type=release" >> $GITHUB_OUTPUT
          else
            echo "type=prerelease" >> $GITHUB_OUTPUT
          fi

      - name: Generate version and changelog
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          if [[ "${{ steps.bump.outputs.type }}" == "release" ]]; then
            npx standard-version
          else
            npx standard-version --prerelease
          fi

          # Generate detailed changelog
          npx conventional-changelog -p angular -i CHANGELOG.md -s -r 0

          git add CHANGELOG.md package.json
          git commit --amend --no-edit
          git push --follow-tags

  build:
    runs-on: ubuntu-latest
    needs: [version-and-changelog]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: build/
