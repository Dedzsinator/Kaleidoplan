name: Build and Deploy Docker Images

on:
  push:
    branches: [main]
    paths-ignore:
      - '**/README.md'
      - '**/LICENSE'
      - '.vscode/**'
      - '.github/**'
      - '!.github/workflows/deploy.yml' # Ensure this workflow itself is not ignored

env:
  REGISTRY: ghcr.io
  # IMAGE_NAME will be <owner>/<repo_name>
  # So, images will be ghcr.io/owner/repo/frontend and ghcr.io/owner/repo/backend
  IMAGE_NAME_FRONTEND: ${{ github.repository }}/frontend
  IMAGE_NAME_BACKEND: ${{ github.repository }}/backend

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Required to push images to GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Frontend Image Build & Push
      - name: Extract metadata (tags, labels) for Frontend
        id: meta_frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}
          tags: |
            type=sha,prefix=,suffix=,format=short
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Frontend image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./frontend.dockerfile
          push: true
          tags: ${{ steps.meta_frontend.outputs.tags }}
          labels: ${{ steps.meta_frontend.outputs.labels }}
          build-args: |
            REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}
            REACT_APP_SPOTIFY_CLIENT_ID=${{ secrets.REACT_APP_SPOTIFY_CLIENT_ID }}
            REACT_APP_SPOTIFY_CLIENT_SECRET=${{ secrets.REACT_APP_SPOTIFY_CLIENT_SECRET }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Backend Image Build & Push
      - name: Extract metadata (tags, labels) for Backend
        id: meta_backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}
          tags: |
            type=sha,prefix=,suffix=,format=short
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Backend image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./backend.dockerfile
          push: true
          tags: ${{ steps.meta_backend.outputs.tags }}
          labels: ${{ steps.meta_backend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
